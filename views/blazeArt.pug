doctype html
html
  head
    title #{that.i18nService.i18n.__("ブレイズアーツ")}
    link(rel="stylesheet" href= that.exportService.rootFolderRelativePath + "css/main.css")
    script(src= that.exportService.rootFolderRelativePath + "js/blazeArt.js")

    //- scroll top button for mobile
    script(src="https://code.jquery.com/jquery-3.5.1.min.js" integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=" crossorigin="anonymous")
    script(src="https://cdnjs.cloudflare.com/ajax/libs/material-scrolltop/1.0.2/material-scrolltop.min.js" integrity="sha512-U5XMCa20kp0+xaI+DDNcEjTrwecJ5jkWGUB9Ye4cRkGWgfQ03dnXu+eFr7BtjyjPSBCBngip9MlTgHjuSrxXAA==" crossorigin="anonymous")
    link(rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/material-scrolltop/1.0.2/material-scrolltop.min.css" integrity="sha512-V5Tr6yGfJc51zNqUUn+CydMuxKdQBf52F6EX89kityPpmSBduIBl39xsmcoKcmlLds+O8l+qN6FtgSjBSIMspA==" crossorigin="anonymous")
    script(src="https://cdnjs.cloudflare.com/ajax/libs/mobile-detect/1.4.4/mobile-detect.min.js" integrity="sha512-hSVyGuXBHmZy+A+P21DRUAuc7UTfcqc0geieb/H1ZmqiJAoDTfzFYIOBAMTcFUWU/PwLPEoREYG/77ckPB6oSw==" crossorigin="anonymous")
    script(src= that.exportService.rootFolderRelativePath + "js/scrollTopButton.js")

    style.
      .blaze-art-indexes-container{
        display: flex;
        flex-wrap: wrap;
      }
      .blaze-art-indexes-container img {
        width: 120px;
      }
      .blaze-art-index-container {
        text-align: center;
      }

      .item-container {
        display: flex;
        padding: 12px;
      }
      .item-container-left {
        min-width: 200px;
        max-width: 200px;
        padding: 12px;
      }
      .item-container-right {
        padding: 12px;
      }
  body
    div
      h3 #{that.i18nService.i18n.__("ブレイズアーツ")} (BA)
      ul
        li LV 1 - 100 EXP
        li LV 2 - 400 EXP
        li LV 3 - 1200 EXP
        li LV 4 - 3600 EXP
        li LV 5 - 0 EXP
    hr
    div.blaze-art-indexes-container
      - for (const _chara of chara.m_vList.filter(p => p.BA.length))
        div.blaze-art-index-container
          a.scroll-to-first-ba(href="#" data-df= _chara.DF)
            p= _chara.NAME
            img(src= that.exportService.rootFolderRelativePath + "img/chara/Texture2D/icon_chara_all_" + _chara.DF.toString().padStart(4, "0") + "_00.png" alt= _chara.NAME)
    br
    br
    br
    br

    div
      - for (const _blazeArt of blazeArt.m_vList)
        div.item-container
          div.item-container-left
            p DF: #{_blazeArt.DF}

          div.item-container-right
            div 
              - for (const _chara of chara.m_vList.filter(p => p.BA.some(i => i.DF === _blazeArt.DF)))
                a(class="chara-DF-" + _chara.DF href="chara.html#DF-" + _chara.DF target="_blank")
                  img.icon-middle(src= that.exportService.rootFolderRelativePath + "img/chara/Texture2D/icon_chara_all_" + _chara.DF.toString().padStart(4, "0") + "_00.png" alt= _chara.NAME)
            div
              - const allBlazeArts = [... _blazeArt.LV.map(p => [p.EXP_PT, skill.m_vList.find(i => i.id === p.SKILL_DF)]).entries()]
              - for (const [i, [exp, _skill]] of allBlazeArts)
                p LV #{i + 1} / #{that.i18nService.i18n.__("次")} LV #{exp} EXP
                p= _skill.name
                p= _skill.detail
                br
                - const attackSkill = _skill.combSkillList.find(p => p.effect === 1) || _skill
                p #{that.i18nService.i18n.__("属性")}: #{that.lookup.eBattleElementKind[attackSkill.element]}
                p #{that.i18nService.i18n.__("對象")}: #{that.lookup.targetTeam[attackSkill.targetTeam]}#{that.lookup.fieldItemRange[attackSkill.targetScope]}
                - if (attackSkill.stateOwn.length)
                  div
                    h5 #{that.i18nService.i18n.__("追加状態 (自)")}
                    - for (const [i, _state] of attackSkill.stateOwn.entries())
                      - const effect = abnormalState.m_vList.find(p => p.id === _state.id)
                      p #{(_state.rate * 100).toFixed(2)}% #{effect.name}
  
                - if (attackSkill.state.length)
                  div
                    h5 #{that.i18nService.i18n.__("追加状態")}
                    - for (const [i, _state] of attackSkill.state.entries())
                      - const effect = abnormalState.m_vList.find(p => p.id === _state.id)
                      p #{(_state.rate * 100).toFixed(2)}% #{effect.name}
                - if (allBlazeArts.length !== (i + 1))
                  hr
        hr
