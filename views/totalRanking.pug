doctype html
html
  head
    title 裝備 / キャラクター ランキング
    link(rel="stylesheet" href= exportFileManager.rootFolderRelativePath + "css/main.css")

    //- scroll top button for mobile
    script(src="https://code.jquery.com/jquery-3.5.1.min.js" integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=" crossorigin="anonymous")
    script(src="https://cdnjs.cloudflare.com/ajax/libs/material-scrolltop/1.0.2/material-scrolltop.min.js" integrity="sha512-U5XMCa20kp0+xaI+DDNcEjTrwecJ5jkWGUB9Ye4cRkGWgfQ03dnXu+eFr7BtjyjPSBCBngip9MlTgHjuSrxXAA==" crossorigin="anonymous")
    link(rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/material-scrolltop/1.0.2/material-scrolltop.min.css" integrity="sha512-V5Tr6yGfJc51zNqUUn+CydMuxKdQBf52F6EX89kityPpmSBduIBl39xsmcoKcmlLds+O8l+qN6FtgSjBSIMspA==" crossorigin="anonymous")
    script(src="https://cdnjs.cloudflare.com/ajax/libs/mobile-detect/1.4.4/mobile-detect.min.js" integrity="sha512-hSVyGuXBHmZy+A+P21DRUAuc7UTfcqc0geieb/H1ZmqiJAoDTfzFYIOBAMTcFUWU/PwLPEoREYG/77ckPB6oSw==" crossorigin="anonymous")
    script(src= exportFileManager.rootFolderRelativePath + "js/scrollTopButton.js")

    style.
      table {
        width: 100%;
      }
      th {
        white-space: nowrap;
      }
      td, tbody tr th {
        border-bottom: 1px solid black;
      }
      th, td {
        text-align: center;
      }

      .category-indexes-container {
        display: flex;
        flex-wrap: wrap;
      }
      .category-index-container {
        padding: 12px;
      }

      td img {
        width: 140px;
      }
  body
    div
      h2 TOP 100
      p
        small サブ裝備 = round(值 * 5%)
      p
        small (值 / サブ裝備)
      p
        small 全裝備 LV 80
      p
        small キャラクター LV 80 完食
      p
        small 敵 LV 120
    hr

    div
      h3 裝備
      div.category-indexes-container
        - for (const state of itemStates)
          div.category-index-container
            h3
              a(href="#item-state-" + state)= Lookup.state[state] || '総戦闘力'
      div.category-indexes-container
        - for (const element of Object.keys(byItemElement))
          div.category-index-container
            h3
              a(href="#item-element-" + element)= Lookup.element[element] || '全屬性'
    hr
    div
      h3 キャラクター
      div.category-indexes-container
        - for (const state of characterStates)
          div.category-index-container
            h3
              a(href="#chara-" + state)=  Lookup.state[state] || '総戦闘力'
    hr
    div
      h3 敵
      div.category-indexes-container
        - for (const state of enemyStates)
          div.category-index-container
            h3
              a(href="#enemy-state-" + state)=  Lookup.state[state] || '総戦闘力'
      div.category-indexes-container
        - for (const element of Object.keys(byEnemyElement))
          div.category-index-container
            h3
              a(href="#enemy-element-" + element)= Lookup.element[element] || '全屬性'
    hr
    div
      - for (const state of itemStates)
        h3(id="item-state-" + state)= Lookup.state[state] || '総戦闘力'
        table
          thead
            tr
              th ランク
              th DF
              th 名前
              th 物理攻撃
              th 物理防禦
              th 魔法攻撃
              th 魔法防禦
              th 速度
              th 総戦闘力
              th 火
              th 水
              th 風
              th 土
              th 光
              th 闇
              th 画像
          tbody
            - for (const [i, _item] of byItemState[state].entries())
              - const SATK = LogicHelper.calculateState(_item.EQU.SATK, 80)
              - const SDEF = LogicHelper.calculateState(_item.EQU.SDEF, 80)
              - const MATK = LogicHelper.calculateState(_item.EQU.MATK, 80)
              - const MDEF = LogicHelper.calculateState(_item.EQU.MDEF, 80)
              - const SPD = LogicHelper.calculateState(_item.EQU.SPD, 80)
              tr
                td= i + 1
                td= _item.DF
                td 
                  span=_item.NAME
                  - if (_item.GROUP_DF)
                    - const _chara = chara.m_vList.find(p => p.GROUP_DF === _item.GROUP_DF)
                    img.icon-small(src= exportFileManager.rootFolderRelativePath + "img/chara/Texture2D/icon_chara_all_" + _chara.DF.toString().padStart(4, "0") + "_00.png" alt= _chara.NAME)
                td #{SATK} / #{LogicHelper.calculateSupportState(SATK)}
                td #{SDEF} / #{LogicHelper.calculateSupportState(SDEF)}
                td #{MATK} / #{LogicHelper.calculateSupportState(MATK)}
                td #{MDEF} / #{LogicHelper.calculateSupportState(MDEF)}
                td #{SPD} / #{LogicHelper.calculateSupportState(SPD)}
                td= SATK + SDEF + MATK + MDEF + SPD
                th #{_item.ELM.FIRE} / #{LogicHelper.calculateSupportState(_item.ELM.FIRE)}
                th #{_item.ELM.WATER} / #{LogicHelper.calculateSupportState(_item.ELM.WATER)}
                th #{_item.ELM.WIND} / #{LogicHelper.calculateSupportState(_item.ELM.WIND)}
                th #{_item.ELM.EARTH} / #{LogicHelper.calculateSupportState(_item.ELM.EARTH)}
                th #{_item.ELM.LIGHT} / #{LogicHelper.calculateSupportState(_item.ELM.LIGHT)}
                th #{_item.ELM.DARK} / #{LogicHelper.calculateSupportState(_item.ELM.DARK)}
                td
                  a(href="item.html#DF-" + _item.DF target="_blank")
                    img(src= exportFileManager.rootFolderRelativePath + "img/icon_s/Texture2D/icon_item_s_" + _item.DF + ".png" alt= _item.NAME)
        hr
    div
      - for (const element of Object.keys(byItemElement))
        h3(id="item-element-" + element)= Lookup.element[element] || '全屬性'
        table
          thead
            tr
              th ランク
              th DF
              th 名前
              th 物理攻撃
              th 物理防禦
              th 魔法攻撃
              th 魔法防禦
              th 速度
              th 総戦闘力
              th 火
              th 水
              th 風
              th 土
              th 光
              th 闇
              th 画像
          tbody
            - for (const [i, _item] of byItemElement[element].entries())
              - const SATK = LogicHelper.calculateState(_item.EQU.SATK, 80)
              - const SDEF = LogicHelper.calculateState(_item.EQU.SDEF, 80)
              - const MATK = LogicHelper.calculateState(_item.EQU.MATK, 80)
              - const MDEF = LogicHelper.calculateState(_item.EQU.MDEF, 80)
              - const SPD = LogicHelper.calculateState(_item.EQU.SPD, 80)
              tr
                td= i + 1
                td= _item.DF
                td 
                  span=_item.NAME
                  - if (_item.GROUP_DF)
                    - const _chara = chara.m_vList.find(p => p.GROUP_DF === _item.GROUP_DF)
                    img.icon-small(src= exportFileManager.rootFolderRelativePath + "img/chara/Texture2D/icon_chara_all_" + _chara.DF.toString().padStart(4, "0") + "_00.png" alt= _chara.NAME)
                td #{SATK} / #{LogicHelper.calculateSupportState(SATK)}
                td #{SDEF} / #{LogicHelper.calculateSupportState(SDEF)}
                td #{MATK} / #{LogicHelper.calculateSupportState(MATK)}
                td #{MDEF} / #{LogicHelper.calculateSupportState(MDEF)}
                td #{SPD} / #{LogicHelper.calculateSupportState(SPD)}
                td= SATK + SDEF + MATK + MDEF + SPD
                th #{_item.ELM.FIRE} / #{LogicHelper.calculateSupportState(_item.ELM.FIRE)}
                th #{_item.ELM.WATER} / #{LogicHelper.calculateSupportState(_item.ELM.WATER)}
                th #{_item.ELM.WIND} / #{LogicHelper.calculateSupportState(_item.ELM.WIND)}
                th #{_item.ELM.EARTH} / #{LogicHelper.calculateSupportState(_item.ELM.EARTH)}
                th #{_item.ELM.LIGHT} / #{LogicHelper.calculateSupportState(_item.ELM.LIGHT)}
                th #{_item.ELM.DARK} / #{LogicHelper.calculateSupportState(_item.ELM.DARK)}
                td
                  a(href="item.html#DF-" + _item.DF target="_blank")
                    img(src= exportFileManager.rootFolderRelativePath + "img/icon_s/Texture2D/icon_item_s_" + _item.DF + ".png" alt= _item.NAME)
        hr

    div
      - for (const characterState of characterStates)
        h3(id="chara-" + characterState)= Lookup.state[characterState] || '総戦闘力'
        table
          thead
            tr
              th ランク
              th DF
              th 名前
              th HP
              th 物理攻撃
              th 物理防禦
              th 魔法攻撃
              th 魔法防禦
              th 速度
              th 総戦闘力
              th 画像
          tbody
            - for (const [i, _chara] of byCharacter[characterState].entries())
              - const fdm = _chara.FDM[_chara.FDM.length - 1];
              - const HP = LogicHelper.calculateState(_chara.SPEC.HP, 80) + fdm.HP
              - const SATK = LogicHelper.calculateState(_chara.SPEC.SATK, 80) + fdm.SATK
              - const SDEF = LogicHelper.calculateState(_chara.SPEC.SDEF, 80) + fdm.SDEF
              - const MATK = LogicHelper.calculateState(_chara.SPEC.MATK, 80) + fdm.MATK
              - const MDEF = LogicHelper.calculateState(_chara.SPEC.MDEF, 80) + fdm.MDEF
              - const SPD = LogicHelper.calculateState(_chara.SPEC.SPD, 80) + fdm.SPD
              tr
                td= i + 1
                td= _chara.DF
                td= _chara.NAME
                td= HP
                td #{SATK}
                td #{SDEF}
                td #{MATK}
                td #{MDEF}
                td #{SPD}
                td= HP + SATK + SDEF + MATK + MDEF + SPD
                td
                  a(href="#DF-" + _chara.DF  target="_blank")
                    img(src= exportFileManager.rootFolderRelativePath + "img/chara/Texture2D/icon_chara_all_" + _chara.DF.toString().padStart(4, "0") + "_00.png" alt= _chara.NAME)
        hr

    div
      - for (const state of enemyStates)
        h3(id="enemy-state-" + state)= Lookup.state[state] || '総戦闘力'
        table
          thead
            tr
              th ランク
              th DF
              th 名前
              th EXP
              th HP
              th 物理攻撃
              th 物理防禦
              th 魔法攻撃
              th 魔法防禦
              th 速度
              th 総戦闘力
              th 火
              th 水
              th 風
              th 土
              th 光
              th 闇
              th 画像
          tbody
            - for (const [i, _enemy] of byEnemyState[state].entries())
              - const EXP = LogicHelper.calculateState(_enemy.sParam.SPEC.EXP, 80)
              - const HP = LogicHelper.calculateState(_enemy.sParam.SPEC.HP, 80)
              - const SATK = LogicHelper.calculateState(_enemy.sParam.SPEC.SATK, 80)
              - const SDEF = LogicHelper.calculateState(_enemy.sParam.SPEC.SDEF, 80)
              - const MATK = LogicHelper.calculateState(_enemy.sParam.SPEC.MATK, 80)
              - const MDEF = LogicHelper.calculateState(_enemy.sParam.SPEC.MDEF, 80)
              - const SPD = LogicHelper.calculateState(_enemy.sParam.SPEC.SPD, 80)
              tr
                td= i + 1
                td= _enemy.DF
                td= _enemy.strName
                th= EXP
                td= HP
                td #{SATK}
                td #{SDEF}
                td #{MATK}
                td #{MDEF}
                td #{SPD}
                td= HP + SATK + SDEF + MATK + MDEF + SPD
                th #{_enemy.sParam.ELM.FIRE}
                th #{_enemy.sParam.ELM.WATER}
                th #{_enemy.sParam.ELM.WIND}
                th #{_enemy.sParam.ELM.EARTH}
                th #{_enemy.sParam.ELM.LIGHT}
                th #{_enemy.sParam.ELM.DARK}
                td
                  a(href="enemy.html#DF-" + _enemy.DF target="_blank")
                    img(src= exportFileManager.rootFolderRelativePath + "img/enemy/Texture2D/" + `enemy_tex_${_enemy.sParam.MDL}.png` alt= _enemy.strName)
        hr