doctype html
html
  head
    title 他のキャラクター
    link(rel="stylesheet" href= exportFileManager.rootFolderRelativePath + "css/main.css")

    //- scroll top button for mobile
    script(src="https://code.jquery.com/jquery-3.5.1.min.js" integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=" crossorigin="anonymous")
    script(src="https://cdnjs.cloudflare.com/ajax/libs/material-scrolltop/1.0.2/material-scrolltop.min.js" integrity="sha512-U5XMCa20kp0+xaI+DDNcEjTrwecJ5jkWGUB9Ye4cRkGWgfQ03dnXu+eFr7BtjyjPSBCBngip9MlTgHjuSrxXAA==" crossorigin="anonymous")
    link(rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/material-scrolltop/1.0.2/material-scrolltop.min.css" integrity="sha512-V5Tr6yGfJc51zNqUUn+CydMuxKdQBf52F6EX89kityPpmSBduIBl39xsmcoKcmlLds+O8l+qN6FtgSjBSIMspA==" crossorigin="anonymous")
    script(src="https://cdnjs.cloudflare.com/ajax/libs/mobile-detect/1.4.4/mobile-detect.min.js" integrity="sha512-hSVyGuXBHmZy+A+P21DRUAuc7UTfcqc0geieb/H1ZmqiJAoDTfzFYIOBAMTcFUWU/PwLPEoREYG/77ckPB6oSw==" crossorigin="anonymous")
    script(src= exportFileManager.rootFolderRelativePath + "js/scrollTopButton.js")

    style.
      .items-index-container {
        display: flex;
        flex-wrap: wrap;
      }
      .item-index-container {
        padding: 12px;
      }
      .item-index-container a {
        width: 120px;
        min-height: 140px;
        display: flex;
        flex-direction: column;
        padding-left: 4px;
        text-align: center;
      }
      .item-index-container > a > p {
        white-space: nowrap;
        text-overflow: ellipsis;
        overflow: hidden;
      }
      .item-index-container > a > img {
        width: 100%;
      }

      .item-container {
        display: flex;
        padding: 12px;
      }
      .item-container-left {
        min-width: 200px;
        max-width: 200px;
        padding: 12px;
      }
      .item-container-right {
        padding: 12px;
      }

  body
    div.items-index-container
      - for (const _chara of chara.m_vList.filter(p => !p.SKILL.length))
        div.item-index-container
          a(href="#DF-" + _chara.DF)
            p #{_chara.NAME}
            img(src= exportFileManager.rootFolderRelativePath + "img/chara/Texture2D/icon_chara_all_" + _chara.DF.toString().padStart(4, "0") + "_00.png" alt= _chara.NAME)
    br
    br
    br
    br

    div
      - for(const _chara of chara.m_vList.filter(p => !p.SKILL.length))
        div.item-container(id="DF-" + _chara.DF)
          div.item-container-left
            h3.item-name= _chara.NAME
            - for (const id of [...Array(10).keys()])
              - const iconFilename = `icon_chara_all_${_chara.DF.toString().padStart(4, "0")}_${id.toString().padStart(2, "0")}.png`
              - if (charaIcons.includes(iconFilename))
                img.icon-full(src= exportFileManager.rootFolderRelativePath + "img/chara/Texture2D/" + iconFilename alt= _chara.NAME)
            p= _chara.DESC
            br
            p DF: #{_chara.DF}
          div.item-container-right
        hr